prometheus-adapter:
  prometheus:
    url: http://prometheus-app-server.default.svc.cluster.local
    port: 80
  rbac:
    create: true

  serviceAccount:
    create: true

  service:
    port: 443

  logLevel: 6
  rules:
    default: false
    custom:
    - seriesQuery: 'rabbitmq_queue_messages{app_kubernetes_io_instance!="",kubernetes_namespace!=""}'
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          app_kubernetes_io_instance: {resource: "service"}
      name:
        as: 'rabbitmq_queue_messages_prueba'
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,queue="prueba"}) by (<<.GroupBy>>)

    - seriesQuery: 'rabbitmq_queue_messages{app_kubernetes_io_instance!="",kubernetes_namespace!=""}'
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          app_kubernetes_io_instance: {resource: "service"}
      name:
        as: 'rabbitmq_queue_messages_tasks-to-rollback'
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>,queue="tasks-to-rollback.cluster-appliers"}) by (<<.GroupBy>>)

    - seriesQuery: 'rabbitmq_queue_messages{app_kubernetes_io_instance!="",kubernetes_namespace!=""}'
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          app_kubernetes_io_instance: {resource: "service"}
      name:
        as: 'rabbitmq_queue_messages_total'
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
      
      # Con esta pude hacerlo funcionar por primera vez
    - seriesQuery: 'rabbitmq_queue_messages{app_kubernetes_io_instance!="",kubernetes_namespace!="",queue=~".*.cluster-appliers"}'
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          app_kubernetes_io_instance: {resource: "service"}
      name:
        as: 'rabbitmq_queue_messages_cluster-appliers'
      metricsQuery: sum(rabbitmq_queue_messages{queue=~".*cluster-appliers"}) by (<<.GroupBy>>)
    
    # Esta es la que desde el principio quisimos probar y "no funcion√≥"
    - seriesQuery: 'rabbitmq_queue_messages{app_kubernetes_io_instance!="",kubernetes_namespace!="",queue=~".*.cluster-appliers"}'
      resources:
        overrides:
          kubernetes_namespace: {resource: "namespace"}
          app_kubernetes_io_instance: {resource: "service"}
      name:
        as: 'rabbitmq_queue_messages_cluster-appliers-tests'
      metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>, queue=~".*cluster-appliers"}) by (<<.GroupBy>>)